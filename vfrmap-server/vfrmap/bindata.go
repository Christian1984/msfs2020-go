// Code generated by go-bindata.
// sources:
// html/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xeb\x93\xdb\xb6\xb5\xff\xde\x99\xfe\x0f\x08\x3a\xe9\x6a\x6b\x12\x22\x29\x51\x2b\x69\xa5\x6d\x5d\xe7\xd1\xdc\x6b\xc7\x9e\xd8\x7d\xdc\x1b\x7b\x34\x10\x09\x51\xac\x41\x80\x97\x80\x56\xbb\xf6\xec\xff\x7e\x07\x20\x29\x01\x7c\x68\xb5\x69\x9a\x7e\x49\x3e\xc4\x12\x71\x5e\xf8\x9d\x83\x83\x83\x03\x6a\x17\x5f\x7c\xf5\xfa\xc5\xbb\xff\x79\xf3\x35\xd8\xca\x8c\xde\xfc\xf6\x37\x8b\xea\x5f\x00\x16\x5b\x82\x63\xfd\x09\x80\x85\x4c\x25\x25\x37\x99\xd8\x88\xc0\x0b\x3c\x37\xe1\xc3\xdb\x4d\x91\xe1\x7c\x31\x2c\x47\x2a\x32\x9a\xb2\x8f\xa0\x20\x74\x09\xd3\x88\x33\x08\xe4\x7d\x4e\x96\x30\xcd\x70\x42\x86\x39\x4b\x20\xd8\x16\x64\xb3\x84\x31\x96\x78\x7e\x78\x7a\xbd\xc6\x82\x4c\xc6\x4e\xfa\xb7\x3f\xbf\xfe\x61\xef\xfd\xf7\xb7\x09\x5f\xc2\xb6\x44\x21\xef\x29\x11\x5b\x42\x64\x2d\x86\x12\xbc\xa1\x44\xfe\x53\x0c\xab\x4f\x28\x12\x02\x82\x61\xcd\x9b\x11\x89\x01\xc3\x19\x59\x42\x9c\xe7\x94\xb8\x19\x5f\xa7\x94\xb8\x7b\xb2\x76\x71\x9e\xbb\x11\xce\xf1\x9a\x12\x08\x22\xce\x24\x61\x72\x09\xef\x89\x80\xe7\x72\x0b\x89\xe5\x4e\xb8\x6b\x5c\xb8\xda\x34\x43\xcc\x9a\xe2\xe8\xe3\xd9\x82\x34\x82\x06\xf7\xdf\xbe\xf9\xe1\x15\xce\x0f\xec\x22\x2a\xd2\x5c\x02\x51\x44\x5d\x33\xfe\xa7\x80\x37\x8b\x61\x49\x73\x1e\x47\xc1\x25\x96\x24\x7e\x85\x8b\x8f\xa4\xe8\xe6\x57\xd3\xa9\x7c\x27\xc9\x9d\x1c\x2a\x58\x6f\x7e\xfb\x9b\x72\x18\xe8\x50\x71\xc0\x9a\xc7\xf7\xe0\x73\xfd\x0c\x80\x2d\x49\x93\xad\x9c\x03\xdf\xf3\xbe\xbc\x3e\x3e\xce\x70\x91\xa4\x6c\x0e\x3c\xe3\x59\x8e\xe3\x38\x65\x89\xfd\x70\xc3\x99\xe2\x0e\xf2\xbb\xa1\x8f\x42\x00\xff\x42\xe8\x2d\x91\x69\x84\xc1\xf7\x64\x47\xa0\x03\x9e\x17\x29\xa6\x0e\x38\x3c\x77\x80\xc0\x4c\xb8\x82\x14\xe9\xe6\x20\xe7\xc1\x36\xd3\x34\x70\xf8\x07\x10\xf1\x2c\x27\x4c\x60\x49\xc0\x86\x17\x60\x4f\xd2\x22\x06\x29\x73\x13\x9c\x11\x77\x5d\xf0\xbd\x20\x05\x10\x11\xa6\x29\x4b\x1c\x20\x24\xc9\x81\x0f\xfe\x30\x3c\xca\xd8\xa7\xb1\xdc\x2a\x2b\xc3\x2f\xbb\x54\x36\x31\x89\x53\x91\x53\x7c\x3f\x07\x1b\x4a\xee\xcc\xb9\x52\x72\xe7\xc6\x69\x41\x22\x99\x72\x36\x07\x11\xa7\xbb\x8c\x5d\x1f\x05\xfd\x54\x6b\x03\xcb\x5a\x59\x60\x26\x36\xbc\xc8\xe6\x9a\x8c\xfc\x63\xe0\xa1\xe9\x65\xf9\x98\x62\x49\x06\xae\x1f\xa0\xf0\xcb\xcb\xae\xa9\xfc\x2e\xc3\xb9\x39\x95\x35\x8e\x3e\x26\x05\xdf\xb1\xd8\x8d\x38\xe5\xc5\x1c\x24\x05\xbe\x6f\xce\x29\x29\xf8\x7e\x0e\xfc\x4e\x81\x92\x50\x92\xf3\x42\xba\x39\xcf\x77\x39\xb0\xa4\xd7\x11\xe1\xa1\x80\x64\x8f\x44\x8f\x0a\x49\x17\xd3\x34\x51\xc0\x11\x26\x49\x71\x9e\x3a\x8a\xd7\x84\x76\x28\x75\x8b\x32\x70\x6d\xdd\xa6\xa8\xed\x4e\x4d\x9a\xc9\x82\x53\x61\x09\xe0\x22\x2d\x1d\x88\xd7\x82\xd3\x9d\x24\x86\x99\x6b\x2e\x25\xcf\xe6\xc0\xb7\x26\x54\xe9\xb2\x1f\x7e\x72\x53\x16\x93\x3b\xbd\x76\xcc\x99\xb6\x31\xdf\x6f\xd3\x86\x92\x22\x26\xc5\x1c\xf8\xf9\x1d\x10\x9c\xa6\x31\xd0\xb9\xa7\x73\xad\xa1\xd0\x9e\x5e\xf9\xa1\xfe\x37\x65\xf9\x4e\xfe\xa8\x17\x7d\xb4\x25\xd1\xc7\x35\xbf\xfb\xe0\x74\x0c\x16\x38\x4e\xf9\x87\xce\x20\x67\x9c\x91\xb6\x82\xd3\x2a\xc0\x33\xed\x96\x2e\x4d\x06\x8d\xc8\x31\x3b\x61\x4c\xbf\x8c\x9a\x40\x09\xe8\xf6\x5c\x41\x28\x96\xe9\x2d\x69\x05\x9d\xdb\xe9\xaa\x3a\x66\x28\xd9\xc8\x39\x08\x50\x10\x5a\xc3\x87\x24\x68\x3d\xa5\x29\x23\x6e\xf7\xd0\x4e\x90\xc2\x15\x84\x92\x48\xb6\x01\xac\x3f\xa2\x2a\x77\x97\xa1\xec\x56\x3b\x85\x39\x9f\x2c\x65\x6e\x95\x9b\x46\x9e\x97\x9b\xb9\xa6\x7a\xbc\x63\x82\x48\xf0\x45\x9a\xa9\x35\x81\x99\xec\xd2\x73\xc2\x41\xf3\xf9\x9a\x6c\x78\x41\x1e\x71\x54\x45\x8b\x37\x92\x14\x67\xf8\xf4\x4c\xa9\x25\x69\xaf\x50\x2b\x0a\x4e\x89\x6c\x10\x3e\x2a\xf0\x31\x13\x6d\x3a\x2d\xce\x74\x4a\xe5\xa7\x39\xb8\xb8\xb8\x3e\x33\x69\xe8\xd4\x5c\x0f\x53\x0a\x3c\xe4\x0b\x40\xb0\x78\xda\x9a\x2f\x29\x5c\x65\xde\x4e\x34\x23\xee\xb1\xa4\xf2\xb3\xc6\xc3\xb9\x08\x9e\xed\x3a\x53\x60\x67\xf5\x61\xcd\xb5\x8a\x7d\x7b\x4f\x29\x97\xae\xb5\xa3\xf0\xdc\x7c\x70\x2e\x02\xe7\x47\xf9\xb9\xa1\x7b\x66\x44\xb6\x22\xad\xed\xd3\x66\x48\xd4\xf8\x78\x68\xd2\x85\x50\xf3\x71\x85\x51\x63\x37\x2e\x71\xea\xdb\x26\xb5\xb9\x73\x3d\x77\x12\x3f\x25\x6a\x7a\x79\xfa\xa3\xc7\x66\x39\x23\x8a\xba\x19\xfa\xa2\xa9\x5a\x40\x07\x2c\x77\xe4\xe4\x02\xb2\x08\xfa\x36\xbe\x47\x66\xd9\xe1\xfa\xc7\xb0\x7c\x94\xa5\x23\x6a\x9e\x00\x63\x2b\xca\x8c\x72\xf2\x50\x42\xfe\x63\xe0\x93\xec\xb2\x9d\x7b\xfa\xea\x95\xc7\x93\x8f\xfa\x67\x31\xd4\x67\x90\xc3\x99\x63\x61\x1d\x50\x00\x80\x3b\x41\x80\x90\x45\x1a\x49\x68\x54\xcd\x94\x48\x90\xe1\xfc\xda\xfe\xae\xce\x39\x1d\x8f\xde\x55\xf5\x61\xc7\xd0\x77\x11\x67\xd6\x63\xbd\xef\x5a\x4f\xf6\xc2\x26\xa0\x98\x91\x55\x9b\xac\x2e\x42\x3b\x86\x36\x9c\x52\xbe\x5f\x69\x4e\xb0\x04\x1b\x4c\x8d\x2c\xaf\x08\x28\x16\x72\x55\x68\x76\xb0\x04\x9f\x1f\x0e\x83\x11\x67\x42\x82\x94\xa5\x32\xc5\x74\x95\x73\x01\x96\xe0\x25\xa2\x58\xbe\x64\xc9\x20\x0c\xd0\xf8\x2a\xb8\x72\x5c\x1f\x5d\x85\xc1\xe8\xe8\x1a\x9b\x3b\xc3\xf9\xaa\x20\x7a\xff\x49\x39\x53\x12\xcc\x64\x9a\x26\xdb\xb9\xf9\x00\x00\x99\x52\xb2\x12\xe9\x27\x32\x07\x41\x38\x71\xcc\xa1\x4f\x9c\x67\x2b\xbe\xd9\x08\xa2\x52\x86\x35\x94\x46\x9c\x55\x5c\xa3\xe0\x38\xf0\x60\x10\x65\x24\x4e\x77\x59\xbf\xb6\xd0\x0f\xfa\xb5\xb9\x7e\x9f\xba\xc9\xb8\x5b\x1d\x55\xe7\x93\x3e\x5d\xbe\x17\x8c\x4f\x28\x0b\xfa\x94\xf9\xc1\xd4\xd0\x76\x88\xe5\x46\x64\x99\x80\x83\x65\xd3\x03\x48\x81\xde\x88\x65\x71\x9b\xbc\x51\xe1\xa1\xe2\xf1\xad\x2c\x52\x96\x80\x25\xb8\x58\xfc\xf1\x2e\xa3\xe0\x96\x14\x22\xe5\x6c\x09\x7d\xe4\x41\x40\x58\xc4\x55\x5d\xba\x84\x7f\x7d\xf7\x8d\x3b\x85\x40\x48\xcc\x62\x4c\x39\x23\x4b\xc8\x38\xfc\xe3\xcd\x42\xdc\x26\xe0\x2e\xa3\x4c\x2c\xe1\x56\xca\x7c\x3e\x1c\xee\xf7\x7b\xb4\x1f\x21\x5e\x24\xc3\xc0\xf3\xbc\xa1\xb8\x4d\x60\xb5\x51\x2c\x61\x30\x9e\xa1\xe9\x18\x96\x1b\x84\xfa\x3a\x45\x41\x08\x6d\xb5\x37\xba\xb7\x11\x63\x89\x41\x1a\x2f\x61\xfd\x65\x06\x87\x37\x8b\x1c\xcb\xad\x7e\xaa\x3e\x84\x57\xc1\x18\x82\x78\x09\x5f\x81\x60\x7c\x85\x42\x7f\xec\x8d\x1d\x5f\x85\xaa\x17\x4c\x26\xc0\x1f\xcd\x90\x17\x5e\x4d\x7d\xe7\xca\x47\x53\xcf\x9b\x8d\x27\x20\x02\x1e\x9a\x7a\xc1\x64\xea\xa8\x43\xea\x38\xf4\xa7\xe3\x10\xf8\x68\x14\x8c\xaf\x46\x8e\x3b\xf6\x50\x10\x4e\x14\xaf\x87\xa6\xe1\x58\x51\x8d\x43\x34\xf6\xaf\xc2\xd9\x0c\xb8\x23\x34\x1b\x7b\xa3\xb1\xe3\x8e\x47\x28\x98\x4c\xc6\x93\x00\xb8\x23\x1f\x05\x23\xcf\x9f\x3a\x6e\x30\x46\x93\x91\xe7\xfb\xb3\x91\x7e\x3a\x9e\x8e\x46\xa1\xe3\x86\x68\x14\x78\xa3\xc9\x15\x70\x3d\xe4\x4d\x66\x23\x27\x44\xc1\xd4\x1f\x4d\x7c\xe0\xfa\xc8\xf3\x43\x2f\x70\x46\x01\x0a\x67\xd3\xd1\x74\xaa\x1e\xf9\xde\xf8\xca\x77\x42\x0f\x4d\x47\x93\x49\x10\x80\x97\x6a\x63\x9c\x8e\x83\x2b\xff\xca\xf1\xc3\x31\x1a\x5d\x85\x93\x00\x78\x8e\x3f\xf5\x90\x3f\x0b\xaf\x42\x40\x81\xef\x7b\x28\xf4\xbc\x70\xea\xb8\xa1\x87\xc6\xd3\x60\x34\x03\x23\x34\x9b\x8d\x46\x81\x33\xf5\x50\x30\xf3\x27\xca\xa6\x00\x79\xe3\x20\x9c\x5c\x39\x41\x80\x66\xa3\xa9\x3f\x51\x36\x05\xde\x68\x3a\x0e\x1d\x7f\x82\xa6\xb3\xc9\x6c\x04\xc6\x01\x52\xba\xae\x02\xc7\xf5\x7d\x14\xce\x42\x8d\x85\xe7\x4d\x1d\x0f\xf9\xa3\x59\xa8\x08\xae\xfc\x91\xef\x3b\xbe\x87\x66\xfe\xf4\x6a\xa6\xa4\x84\xde\x2c\x98\x39\xae\x92\x32\x0d\xfc\x52\xd9\x38\x1c\x5d\x8d\x1d\x37\x08\xd0\x68\x36\xf3\x46\x20\x40\x13\xdf\x1f\x05\x8e\x3b\xf5\xd0\x28\x0c\xbc\x10\xf8\xbe\x8f\x46\xe1\x6c\x16\x3a\xe3\x29\x0a\xbd\x89\xef\x2b\x59\x57\xa3\xf1\x4c\xf1\x85\xe8\xea\x2a\x98\x85\xe0\x13\x04\x9b\x94\x52\xb7\xd8\x51\xb2\x84\xe4\x96\x30\x1e\xc7\xe5\xb3\x25\x5c\xad\x5e\xbc\x7e\xf9\xfa\x87\xd5\x4a\xc5\x86\x8a\xb4\x9b\x8b\x56\xfe\x54\x61\xfe\x67\x55\xb7\xe8\x7c\xa6\xd6\xd7\xc0\x58\xa9\xea\xfb\x5f\x0b\x3a\x2f\x63\x9d\xfc\xf5\x87\xef\x06\x66\x23\x51\xdc\x26\xcf\xee\x32\xea\x40\xf0\xac\x63\xdd\x5c\xa2\x82\xe4\x14\x47\x64\x00\x7f\x07\x1d\xf8\x65\x30\x82\xc6\xa3\xa3\x71\x0e\xa8\x9a\x77\x97\x8e\xad\xf9\xad\x5e\xe8\x3f\xda\x8b\x16\x1d\x72\x80\x03\xfa\x46\x8e\x87\xe8\x87\xcb\xf6\x96\xa1\x2c\xfc\xbb\xda\x01\xff\xa3\x53\xd6\x7b\xf0\x2f\x39\xe5\x6f\x0b\x42\xd8\x7f\x74\xca\x89\xb2\xe0\xdf\x36\xe5\xfa\xcb\x66\xc7\x74\x87\x0f\xf0\x9c\xb0\x55\xca\x56\x09\xe7\x09\x25\xab\x0c\xe7\x62\x70\x69\xee\x43\xb7\xb8\x00\xbb\x82\x82\x25\xd0\xd9\x59\x54\xe9\xb9\xa4\x47\x11\xcf\x86\x8a\x67\xf8\x27\x35\x71\xa3\x30\x50\xbb\x7e\x2a\x77\x31\x01\xcf\x00\x74\x5a\x83\x9c\x25\xf6\x68\x86\x73\x94\x10\xf9\xbf\x9c\x67\x83\x4b\xf5\xf4\x13\x34\xcf\x02\x2c\xe6\x7b\xa4\x6c\x1d\xec\x0a\xea\x5c\xac\xd6\x14\xb3\x8f\x17\x9d\xfd\xc1\xc3\xd4\x76\x79\x8c\x25\x79\x85\xf3\x41\x26\x92\x4b\x7b\x6f\x55\xb3\x6a\xd4\x27\x99\x48\x0e\x46\x3b\x40\x7f\xab\xad\x34\xcb\x48\x50\x95\x62\x48\x10\xf9\xb2\xe4\xcc\xb9\xe8\xa3\xf8\x81\x4b\xac\x8c\x79\xce\x12\x4a\xb4\x8a\x2d\xc1\x6a\x3f\xbc\xb4\x7a\xaa\xc0\xac\xd3\x50\xce\x05\x4a\x19\x53\x95\xe0\x9d\xaa\xb0\xbe\xdf\x65\x6b\x52\x28\x35\xca\xc0\x4b\x24\xf9\x37\xe9\x1d\x89\x07\x93\xcb\x03\x7c\x26\x89\x0a\xb7\x23\x49\x43\x4f\xba\x01\x03\xb3\xc0\x6b\xe0\x02\xb4\x23\x72\xcc\xde\xf1\xf6\xb4\x1e\x3a\xd0\xde\x2b\x0c\x19\xd9\x83\xbf\x93\xf5\x5b\x1e\x7d\x24\x72\x00\xf7\x2a\x48\x94\x55\x95\xdf\x28\x8f\x34\x08\x68\xcb\x85\x64\x38\xd3\x5e\x9f\x77\x11\xe8\x92\xf2\x19\x80\xc3\xbd\x80\x47\xdd\x7b\x81\x38\x53\xce\x57\xd5\x68\xe5\x5d\x3b\x48\x87\x43\x55\x3c\x72\x4a\x10\xe5\x89\x32\x40\xc7\xb5\x21\xe2\xc1\x16\x16\x51\x2e\xc8\x13\xa4\x69\xfa\x7e\x71\x19\x11\x02\x27\x96\x40\xd2\x5a\x44\x99\x50\x45\xd2\x7f\xbd\x7d\xfd\x3d\xca\x71\x21\xc8\x80\x20\x95\x3f\x4c\x88\xed\xc2\x3a\x13\x89\xe5\x3c\xe5\xba\x0c\xe7\xe0\x8b\xe5\x12\xec\x58\x4c\x36\x29\x23\x71\xc3\x7f\x76\xcc\x5f\xf7\x14\x7f\xad\xa5\xa2\x4a\x76\xc5\xd4\x32\xba\x5c\x23\x46\x45\x6f\x59\xa4\x28\xb8\xc8\xaa\x08\x78\x89\xde\xa5\x94\xbc\xc4\xf7\xa4\x18\xd4\x95\xdc\x67\xf1\x80\x54\x1d\xab\xd7\xae\x90\x05\x21\x52\x05\x98\xaa\xec\x3e\x7f\x7a\x18\x7e\xbe\x7b\x18\x7e\xbe\x7f\x40\x39\x4b\xa0\x63\xcf\x24\xc3\x77\x2a\x19\xcc\x81\x3f\xb5\xaa\xdb\x2c\x65\xe5\x73\xbb\xe8\x55\x4a\xca\x24\xd9\xc8\x84\x87\x2a\xba\x55\x3f\xbf\xae\xca\xe7\x06\x83\x51\x5a\x5b\x2c\xea\x7c\x89\xe5\x1c\x18\xb7\x86\xd6\xb8\xd8\xad\x63\x9e\xe1\x94\x89\x39\xf8\x11\x62\xbd\x63\xab\xff\x45\xf0\x83\xe1\x06\xd3\x27\x1a\xbe\x9c\x30\x9c\xe6\xab\x08\x47\x5b\x12\xaf\xd6\x58\x10\xe5\xe3\x33\x10\x55\x69\x17\x55\xec\x88\x11\x39\x4c\x08\xdf\x93\xb5\x16\x34\x14\xa4\xb8\x4d\x23\x32\x94\x99\x18\xfa\xc8\x43\xde\xb0\x56\x54\x69\xf8\xd3\xd7\x6f\xde\x7e\xfb\xe5\xe8\xf9\xcc\xf3\x66\xfe\xe8\x4f\x39\x7b\x82\x43\xc6\xdd\x0e\x19\xff\xc2\x0e\x91\x99\x50\xe7\xfd\x9d\x2d\x68\x38\x8c\x89\x24\x91\xfc\x81\xc8\x94\xe1\x0e\x02\xd3\x4f\xd0\x0f\xe0\x93\x9c\xac\xdb\x0b\x39\x2e\x74\xf7\x54\x89\x3e\xe1\x5a\x21\x71\x46\xd8\x4a\x97\x6d\xab\x7d\x55\x4b\x3d\xea\xd6\x92\x4b\x6f\xac\x92\x33\x52\xfc\xba\x4e\x4c\x30\x25\x29\x0a\x9c\xb2\xa7\x02\x59\x72\xfd\x0a\xa5\x09\xe5\x1e\x4b\x52\x3c\x11\x48\xcd\xa3\xfb\x63\xbf\x62\xa9\xb1\x8c\x70\x21\xf9\x2a\xc6\xc5\xc7\x3e\x24\x55\x2d\xa4\xa9\xe2\xb5\x5b\xe5\x5e\xe1\x2a\x6c\x13\xca\xd7\x98\x22\x21\x28\xda\x60\x21\xe9\xbd\x4e\xe2\x4a\xd4\x0a\x53\xfa\x2b\xbe\xc0\x68\xc5\x19\x3b\xa2\x2a\x53\x60\x86\xf3\x26\x20\x54\x41\xae\x64\xab\x8a\xc4\xe9\xdb\x57\x3f\x58\x36\x95\x97\xf4\x73\x55\xe5\xb4\xa6\x3f\x07\xbe\xdd\x32\xc4\x52\x16\xe9\x5a\x83\xf0\xa2\xbc\x72\x9f\x97\xbd\xd1\x16\xab\x3d\xdc\x98\x9d\x1d\x3f\xa5\x50\x7d\x0c\xa9\xee\xf1\x91\xa1\x67\xf0\xf9\x78\x27\x07\xcb\x6b\x7b\x4a\x36\x12\x5a\x30\x95\xf4\x08\xc7\xf1\x73\x83\x13\x2e\x70\xf9\x32\xd2\x7b\xeb\xd8\xd6\x2e\xc3\x22\x9e\xdf\xeb\x0b\xe5\xf7\x10\x48\x5c\x24\x44\x2e\xdf\xc3\xf2\x7c\xf5\x1e\x02\xdd\xed\x5e\xbe\x87\xef\xe1\xcd\xeb\x9c\xa8\xd3\x2c\x21\xaa\x52\x5c\x0c\xf1\x0d\xfc\x97\xac\xa8\xaa\x96\xc7\xb4\x2a\xd2\xe7\xdf\xbd\xf9\x69\xfa\xe6\x43\x7d\x38\x35\x32\xd8\x63\xea\xde\x6a\xca\x9f\x3e\x3b\xbd\xd2\x75\xaa\x7c\x4c\xd3\x0b\x45\xf9\xd3\x15\x25\xa9\xdc\xee\xd6\x5a\x13\x4d\x31\x1b\x1a\x6f\xc0\x3d\xa6\x59\xd1\xff\x2c\x8a\xd7\xf7\x19\xbe\x4b\xb3\x9d\x38\x6a\x97\x9c\xd3\x35\x2e\xdc\xf2\x60\xe7\x4a\x92\xe5\x14\x4b\xf2\x98\x49\x07\x49\x3f\x8b\x5d\x2f\xb6\x45\x2a\x64\x8a\x99\x3f\x9b\x8e\x9f\x82\x8c\xc5\xd8\x32\xa5\xcb\xa8\x77\x5c\x1d\xc9\xda\xeb\x5a\xe5\x9b\x57\x38\x6f\x5c\x5f\xa8\xff\xa0\xb5\x8e\xe0\x5c\xa7\xab\x06\x49\x19\x85\xe0\x5d\x59\xb6\xc0\x79\xa3\xfa\xe9\x23\x57\xe5\xe2\x91\xd8\xa8\x3b\x7b\x18\xfe\xae\x76\xf3\x23\x83\xde\xdc\x9b\xa4\x3a\x4c\xc1\x57\x6a\x83\x1b\x7c\xaf\xd2\x04\x78\xc5\x63\x72\x09\xe7\xc6\xd6\x67\xf0\x1c\x0e\xc6\x8d\x53\xce\x2d\x29\x28\xbe\xef\x41\xe4\x7b\x7c\x9b\x26\xba\x01\x80\x29\xf8\x0a\x4b\xac\x50\xe9\xcc\xdf\x5d\x9a\x00\x30\x92\x67\xb9\x0b\x0c\x6a\xf8\x1d\x53\xf3\x65\x9f\xc3\xca\x76\x8d\x4e\xc2\xe5\xc7\x81\xda\x10\x6c\x33\xd3\x48\x25\x61\xbb\x1b\x6c\x61\x55\x98\x9d\x9e\xe6\x75\x53\x3d\xf8\xba\x48\xf5\x5b\x63\xb0\xdc\x79\xcc\x1d\xd2\xca\xe9\x55\x03\xc9\xb2\xb7\x31\xb6\x4e\x59\xfc\x86\xe7\xbb\x7c\xf0\x12\xe9\xb6\xd1\xe0\x33\xde\x49\xfe\x06\xb3\x6a\xdf\x79\xb8\x6c\xb4\xa8\xd4\xd7\x17\xe5\x9b\x1f\x03\xb3\xdd\xa4\x36\xe5\xcb\x76\x08\x97\x7a\xde\xd8\x4d\x32\xcf\xf1\xda\xb6\xd4\x17\x96\x26\x82\x07\x6e\x07\x7c\xee\x98\x5a\xcd\x72\x6a\x8a\x07\x9a\x33\xa7\x5a\xcf\xcd\xbe\xda\x3c\x4e\xaf\x96\x2e\x88\x5c\x1d\x68\x9a\xe6\x96\x38\x58\xa5\x07\xe2\x6c\x70\x11\x17\x38\x11\x12\x17\xf2\xc2\xe9\x6b\xf2\x94\x92\xcb\xe6\xda\x40\xdb\x65\x35\x60\x9a\x31\x77\x94\x4b\x58\x7c\x4a\x6a\xd9\xd3\x79\x2b\x79\x41\xe2\x17\x3a\x6e\x06\x67\x08\x56\x85\xc8\xbf\x26\x18\x00\xca\x23\x4c\xd5\x38\x4e\x88\x42\xf8\x3b\x49\xb2\x01\x64\x2b\x25\x1b\x3a\x76\xcf\xf6\x0c\x93\x22\x9a\x46\x1f\x1f\xc3\xaf\xe9\x19\xa2\x42\x8f\xb2\xe4\x0c\xf9\x6a\xd5\xeb\x04\x10\x6d\x31\x4b\xc8\x29\x4d\xe9\x06\x0c\x08\xd2\xbd\xc8\xe5\xb2\x3f\xcb\x75\x74\x47\xeb\xce\xae\xca\x02\x03\xfb\xaa\xa4\xd1\x2d\x05\x84\x0a\xd2\xd4\x64\xe5\xea\xb3\xc5\xeb\x6b\x89\x4e\xf1\x67\x0a\xd0\xf9\xaa\xa7\x9b\x6b\xe5\x9e\xae\x46\x7a\x97\x5b\x2a\xa7\x58\xaf\xfa\xd9\xab\xf6\x98\x7c\xda\x0e\x6c\x2c\xd1\x24\x17\xe8\x16\xd3\x1d\x01\x4b\x50\x12\x2b\xa7\x1f\x9a\xd8\xd3\x4b\xe3\x12\xa1\x1c\x65\x89\x31\x7a\x6d\xf7\x48\xcd\x8b\x06\x4c\xcb\x86\x7e\x03\xe9\x86\xfe\x9a\xca\x30\xa2\x2d\xa2\xb3\x99\xda\x81\xd6\x41\xf6\x96\x14\xa4\xdd\x51\x35\xda\xc0\x42\xdf\x0d\xa5\x9b\xfb\x81\x69\x5b\x73\x77\x94\xf7\x39\x81\x73\x00\x6b\xb9\xb0\xb9\x45\x53\x2c\xe1\x1c\xe8\x9e\xf2\x37\x94\xe3\x56\x02\x3c\xa0\x8b\x44\x4e\x53\x39\x80\x0e\xbc\xfc\xd1\xfb\x70\xd9\x92\xc3\x92\xa7\xcb\xf1\xdb\x72\x6a\xc0\x4e\x0a\xb3\x21\x57\x0e\xf6\x50\xe8\xf4\xc4\xa7\xe9\xe1\xbd\x40\x82\xb0\xd8\xee\x6f\xf7\x45\x6d\x9d\x8c\xf5\x3f\x96\x2b\x8e\xf7\x20\x8d\xd0\x30\x77\xc6\x92\xc0\xba\x8b\x81\x31\x67\x17\xf5\x3b\x32\x25\x31\x34\x23\xa3\x63\x55\x3e\x26\xb1\x57\x96\x99\xe3\x9a\x2f\xe5\xe8\xaf\xe6\xd5\x41\x57\xaa\xbe\x58\x57\x08\xa8\x54\x58\x4e\xf6\x24\x64\x92\x27\x09\x25\x35\x6a\x16\x30\x06\x9a\x5f\x58\xf7\x47\x8f\xfa\x00\xa7\x45\x89\x40\x99\x1f\x56\xb7\xa9\x48\xd7\x29\x4d\xe5\xfd\x40\x7f\xa4\xa4\xe5\x98\xae\xe7\x66\x6e\x7b\x9d\xe3\x48\xf1\xfb\x9d\x37\x1c\xa0\xc3\x07\x6d\x5e\xcf\xce\x86\x27\xb7\x6e\xd3\x11\xdd\x7b\xe2\x7a\x25\xb6\x7c\x7f\x98\x2b\x74\x40\x3d\x87\x73\x00\x3f\x40\x64\x60\x43\x5a\xf0\x9f\x00\x92\xa0\xea\x7d\x39\x43\x1d\xe8\xd0\x57\x96\x9d\x07\x49\xb6\x8b\x29\x91\x20\x5a\x83\x25\x88\x79\xb4\xcb\x08\x93\xe8\xff\x76\xa4\xb8\x7f\xab\xdf\x01\xe7\xc5\x00\x5a\x3f\x37\x70\xd5\x84\xdd\xc3\x84\x9b\x49\x38\x5a\x37\xbc\x17\xad\x6b\x1b\xc1\x52\x77\xce\xfb\x00\x7e\x64\xaa\x8a\xb5\x59\xcd\x55\x8e\xab\x87\xec\x29\x9d\xbe\xc2\x6a\x6c\x18\xe0\xf7\xbf\xef\xbe\xc5\x6e\x3e\x3f\x5c\x0d\x37\xd6\xba\x5d\x2e\x77\x89\x72\x7a\x04\xf5\xe1\xd1\x73\x21\xdb\x7f\xe3\x6d\x17\x74\x0d\x2f\xe8\x77\xec\xca\x30\x28\x5f\xf5\x52\x15\xdc\x93\x8a\x3f\x6d\xbd\xda\x73\x9c\x4a\x8e\xbe\x94\x7e\x02\x2b\xd7\xdd\xcc\x9a\x97\xd9\x69\xbc\xfc\xd0\x9a\x19\xe5\x38\x2e\xe7\xf5\x56\x62\xd9\x08\xdc\x72\x52\xd6\x02\x54\x7b\xb8\x69\x44\x72\xcc\x88\x16\xdd\x45\x33\x6e\x6d\x29\xd6\x55\xab\x8a\x81\xf6\x30\xdb\x51\xda\x51\xc6\x9e\x88\xe0\x86\xa1\x4b\x00\x55\xe0\x56\x2b\xa8\xc3\x59\x3f\xc7\x92\xec\x59\x94\x8d\x65\xd9\x63\x59\x6f\xd9\x68\x86\x69\x69\x6c\xb5\x97\xf5\xa3\x5f\xed\x47\x4d\xd8\x2b\xbe\x16\xde\xc6\xf3\x0e\xa0\x41\x7b\x93\x3f\x5a\xdd\x76\x57\x03\xea\xd6\x7c\xda\xdb\x46\x47\x72\x39\x31\xf9\x43\x78\xf7\xce\xdf\x58\x02\x16\x04\x26\x3f\x96\x8f\xb2\x63\xd9\x02\xd0\xda\x94\xad\x28\xaa\x33\x97\x36\xac\x05\xb0\x3d\xa4\x30\xee\x66\xc6\xb2\x8f\xb7\x1a\xe9\x74\x8f\xf5\x1e\x85\x4e\x62\x73\xe8\x1c\xf8\x9c\xa3\xf6\xe6\xfb\x33\x75\xca\xb3\x33\x69\x83\xe7\x11\x77\xa8\x53\xea\x09\x28\xd5\x70\x0b\x46\xcd\xd3\x9a\xe8\xe1\x69\xc7\x24\x95\xad\xa2\x3a\x04\x2b\xba\x47\x8c\x62\xf8\x76\xa5\xdf\x4b\xed\x5f\x22\x35\x49\xcb\xb8\x03\x6f\xcb\x40\x6b\xa4\xc3\x48\x5b\xf7\xea\x64\x4a\x39\xfc\xa6\xab\x4a\x2b\x6e\xd9\x53\xab\x7e\x0b\xc6\x8b\xf2\x95\xfc\x8b\xfa\xad\xff\x8b\x0f\x1d\x89\xc6\xd0\xd4\x8a\x09\x63\x0c\xe9\x8e\xc0\xa0\xff\x5c\xda\xc6\x0f\x47\x32\xbd\xd5\xef\xa9\x9d\x70\xed\x91\xa8\x63\x95\x1d\xf4\x17\x6b\xd1\x0b\xc3\x73\x4a\xcf\x46\x42\xff\x3a\xa1\x01\x83\x02\xc1\x30\xb5\xe5\xb0\xc6\x98\x5e\x77\x86\x1f\x95\x6d\x88\x12\x96\xc8\x2d\xb8\x01\x5e\x83\x63\xd1\x45\xd7\xc0\xd9\xa4\xf8\xf1\xc8\xfb\xa1\x03\xf2\x93\xa7\xd9\x82\x24\xa9\x90\xa4\xf8\x0b\x66\x31\x25\x85\xe8\xda\x79\x7f\x89\xb8\x3a\x1d\x55\x66\x4c\xe1\x38\xfe\xfa\x96\x30\xf9\x52\xd9\xcd\x48\x31\x80\x65\x3b\x08\x3a\x40\x15\xd5\xcb\x9b\x66\x40\xf6\x55\xf4\xb5\x50\xe8\xd8\x31\x5b\x55\xda\x56\xcc\x9e\xb9\xea\xff\xad\x31\xb7\xe1\x05\x18\xa8\x8a\x37\x05\x4b\xe0\x5d\x83\xb4\x3b\x50\xae\x41\xfa\xec\xd9\xa9\x68\x49\x3f\xfc\x5c\x18\x9a\x2b\x11\x3a\x20\x3d\x89\x59\x0b\xbc\x03\x4a\x6d\x6b\xbe\x7a\xfd\xaa\xea\xf6\xbe\xe4\x38\x26\x31\x34\x5b\x7d\x8a\xd4\x9a\x9f\x71\x00\x6f\xde\x3e\x64\x38\x65\xf3\xa3\xa6\x84\xc8\xaf\x29\x51\x1f\xff\x7c\xff\x5d\x3c\x80\x9a\xb3\xfc\x71\x2b\xb4\xfb\x1c\x39\x17\xe7\xf1\xb9\x39\x17\x0d\xde\x24\xc3\xf9\x99\xcc\x8a\xb4\xc1\x5d\x6e\xf4\x67\xf2\x97\xc4\x96\x84\x87\xde\x3e\xdc\x13\xc1\xb1\x7f\xc7\xde\xb0\x52\xec\xd6\x59\x2a\xcf\xe6\x76\x4b\xfa\x26\x50\xf9\x29\x90\x1b\x12\x92\xbc\x89\x73\xdd\x63\x3a\x5f\xc6\xa1\x75\xd5\x04\xcc\x48\x44\xf5\xab\x92\x56\xf3\xa5\x71\x3a\x31\xc6\xda\x09\xf4\x78\xdc\xa9\x3f\x5a\x7f\xe7\x62\x31\x3c\xfc\x7d\x93\xc5\x9a\xc7\xf7\xf5\x1f\xbf\x88\xd3\xdb\xf2\xc7\x2c\x38\x87\x37\x8b\x61\x9c\xde\x1e\x7f\x85\xa6\xc6\xca\x7b\x4c\x58\xff\xe8\x5d\xff\x64\x1b\x1e\x7e\x98\x76\x60\x37\x43\xfa\xe6\x68\xe6\x22\xbf\x59\x6c\x47\x4d\x0a\x1d\xbc\x37\x8b\xe1\x76\x74\xb3\x18\xe6\x0d\xf2\xf5\x4e\x4a\xce\x5a\x2c\x3a\x64\x01\x67\x7a\xa3\x59\xc2\xce\x17\xcc\xaf\xcb\x8b\x7d\x90\x32\x50\x3e\x57\x65\x94\x58\x0c\x4b\x91\xe7\xeb\xaa\xc2\xfb\xa8\xad\xd1\xc1\xba\x56\xc6\x77\x08\xb5\xe1\x33\xd0\x69\xc4\x74\xc3\x8a\xf2\x0f\x35\x6c\x78\xd1\x24\xd4\xc1\x77\xf3\xed\x9b\xb7\xf3\xc5\x50\x13\xdd\x2c\xf4\xcf\x18\x8d\xbf\x55\x02\x3b\xe4\x97\x6c\xed\xd9\xf6\xeb\xc1\x54\xc2\x9b\xe7\x75\x5c\x3f\x4d\xd9\x21\xb8\xfb\xf1\x2d\x25\x94\x5f\x3a\x65\x54\xcb\xd4\x00\xdc\xee\x76\x5f\xc3\x9b\xfa\xc9\x49\xe0\xdb\x4e\x38\xb8\xc0\x3c\xd1\x1a\xf1\x2b\x72\xcc\xec\x89\xd6\x95\x02\x6c\xb1\x35\x0e\xc2\xca\x5a\xbd\x7d\x1d\xe2\xa3\xab\xe1\x26\xb7\xa9\xb8\xbc\x86\xa0\x3e\x0e\x0f\x2d\x3f\x9c\x10\x7f\xf3\x76\xcb\xf7\xe0\x79\xf5\xf5\xe0\x93\xa1\xb6\xb8\x61\x7f\x2f\xce\x96\xfc\x32\x7c\xed\x09\x94\x70\xb7\x1a\x78\xd7\xf0\xa6\xec\xde\x28\x03\xa2\x02\x6f\x4c\xdc\x0d\x0b\x8e\xc0\x2f\x86\x55\x56\x59\x0c\xab\x3f\xa9\xf4\xff\x01\x00\x00\xff\xff\x23\xb6\xc4\xf5\x6c\x49\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 18796, mode: os.FileMode(438), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

