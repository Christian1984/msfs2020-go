// Code generated by go-bindata.
// sources:
// html/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5d\x93\xdb\xb6\xb5\xef\x9d\xe9\x7f\x40\xd8\x49\xad\xad\x49\x88\xe0\x97\x48\xad\xb4\xad\xe3\x7c\x34\xf7\xda\xb1\x27\x76\xd3\xde\x9b\x78\x34\x10\x09\x51\xac\x49\x82\x97\x80\x56\xbb\xf6\xf8\xbf\xdf\x01\x48\x4a\x00\x49\x69\xb5\x69\x9a\xbe\xc4\x0f\x5e\x09\x38\xdf\xe7\xe0\xe0\xe0\x80\xd4\xe2\xb3\x2f\x5f\x3d\x7f\xfb\x3f\xaf\xbf\x02\x5b\x5e\xe4\x37\xbf\xff\xdd\xa2\xfd\x0b\xc0\x62\x4b\x70\x22\x3f\x01\xb0\xe0\x19\xcf\xc9\x4d\xc1\x36\xcc\xb1\x1d\xdb\x4a\xe9\xf4\x76\x53\x17\xb8\x5a\x4c\x9b\x99\x16\x2c\xcf\xca\xf7\xa0\x26\xf9\xd2\xc8\x62\x5a\x1a\x80\xdf\x57\x64\x69\x64\x05\x4e\xc9\xb4\x2a\x53\x03\x6c\x6b\xb2\x59\x1a\x09\xe6\x78\x7e\x18\xbd\x5e\x63\x46\x02\xcf\xcc\x7e\xf8\xe2\xd5\xf7\x7b\xfb\xbf\xbf\x49\xe9\xd2\x18\x52\x64\xfc\x3e\x27\x6c\x4b\x08\xef\xc8\xe4\x04\x6f\x72\xc2\xff\xc9\xa6\xed\x27\x18\x33\x66\x80\x69\x87\x5b\x10\x8e\x41\x89\x0b\xb2\x34\x70\x55\xe5\xc4\x2a\xe8\x3a\xcb\x89\xb5\x27\x6b\x0b\x57\x95\x15\xe3\x0a\xaf\x73\x62\x80\x98\x96\x9c\x94\x7c\x69\xdc\x13\x66\x5c\x8a\xcd\x38\xe6\x3b\x66\xad\x71\x6d\x49\xd1\x14\x32\xeb\x1c\xc7\xef\x2f\x26\x24\x2d\xa8\x60\xff\xf0\xf5\xf7\x2f\x71\x75\x40\x67\x71\x9d\x55\x1c\xb0\x3a\x1e\xd3\xf8\x9f\xcc\xb8\x59\x4c\x1b\x98\xcb\x30\x6a\xca\x31\x27\xc9\x4b\x5c\xbf\x27\xf5\x38\xbe\x50\xa7\xf5\x1d\x27\x77\x7c\x2a\xcc\x7a\xf3\xfb\xdf\x35\xd3\x40\x86\x8a\x09\xd6\x34\xb9\x07\x1f\xbb\x31\x00\xb6\x24\x4b\xb7\x7c\x0e\x90\x6d\x7f\x7e\x7d\x1c\x2e\x70\x9d\x66\xe5\x1c\xd8\xca\x58\x85\x93\x24\x2b\x53\x7d\x70\x43\x4b\x81\xed\x54\x77\x53\x04\x7d\x60\xfc\x95\xe4\xb7\x84\x67\x31\x06\xdf\x91\x1d\x31\x4c\xf0\xac\xce\x70\x6e\x82\xc3\xb8\x09\x18\x2e\x99\xc5\x48\x9d\x6d\x0e\x74\x3e\xe9\x62\xaa\x02\x4e\xff\x04\x62\x5a\x54\xa4\x64\x98\x13\xb0\xa1\x35\xd8\x93\xac\x4e\x40\x56\x5a\x29\x2e\x88\xb5\xae\xe9\x9e\x91\x1a\xb0\x18\xe7\x59\x99\x9a\x80\x71\x52\x01\x04\xfe\x34\x3d\xd2\xd8\x67\x09\xdf\x0a\x29\xfd\xcf\xc7\x58\xf6\x6d\x92\x64\xac\xca\xf1\xfd\x1c\x6c\x72\x72\xa7\xea\x9a\x93\x3b\x2b\xc9\x6a\x12\xf3\x8c\x96\x73\x10\xd3\x7c\x57\x94\xd7\x47\x42\x3f\x57\x5a\x47\x93\x96\xd7\xb8\x64\x1b\x5a\x17\x73\x09\x46\xfe\x31\xb1\x61\x78\xd5\x0c\xe7\x98\x93\x89\x85\x1c\xe8\x7f\x7e\x35\xa6\xca\x1f\x0a\x5c\xa9\xaa\xac\x71\xfc\x3e\xad\xe9\xae\x4c\xac\x98\xe6\xb4\x9e\x83\xb4\xc6\xf7\x7d\x9d\xd2\x9a\xee\xe7\x00\x8d\x12\xe4\x24\x27\x15\xad\xb9\x55\xd1\x6a\x57\x01\x8d\x7a\x17\x11\x36\x74\x48\xf1\x40\xf4\x88\x90\xb4\x70\x9e\xa5\xc2\x70\xa4\xe4\xa4\xbe\x8c\x5d\x8e\xd7\x24\x1f\x61\x6a\xd5\x4d\xe0\xea\xbc\x55\x52\xdb\x9d\x50\xba\xe4\x35\xcd\x99\x46\x80\xb2\xac\x71\x20\x5e\x33\x9a\xef\x38\x51\xc4\x5c\x53\xce\x69\x31\x07\x48\x53\xa8\xe5\xa5\x0f\x7e\xb0\xb2\x32\x21\x77\x72\xed\xa8\x9a\x0e\x6d\x5e\xa7\x6b\x3c\x71\x7c\xdf\x04\xc7\xff\x6c\xe8\x5f\x69\x7c\xeb\x84\xd4\x73\x80\xaa\x3b\xc0\x68\x9e\x25\x40\xa6\xa3\xd1\xe5\x07\x7d\x4d\x8e\x53\xe1\x2a\x8d\x6d\x65\x9c\x14\x6c\xcc\xe4\xcd\x87\xee\x6f\x56\x56\x3b\xfe\xa3\xcc\x1e\xf1\x96\xc4\xef\xd7\xf4\xee\x9d\x39\x32\x59\xe3\x24\xa3\xef\x46\x57\x4b\x49\x4b\x32\x64\x70\x9e\x05\x78\x2a\xfd\x3b\xc6\x49\x81\x61\x15\x2e\xcf\x08\x73\x9a\x46\x07\x20\x08\x8c\x87\x40\x4d\x72\xcc\xb3\x5b\x32\x88\x5e\x6b\xd4\xe7\x5d\xf0\xe5\x64\xc3\xe7\xc0\x81\x8e\xee\x8a\x43\x36\xd5\x46\xf3\xac\x24\xd6\xf8\xd4\x8e\x91\xda\x62\x24\x27\x31\x1f\x1a\xb0\xfb\x08\xdb\x4d\xa0\x59\x13\x56\xbb\xe5\xa8\xfa\x14\x59\x69\xb5\x49\xce\xb5\xed\x4a\x8d\x82\x76\x78\x57\x32\xc2\xc1\x67\x59\x21\x16\x17\x2e\xf9\x18\x9f\x33\x0e\x9a\xcf\xd7\x64\x43\x6b\xf2\x80\xa3\x5a\x58\xbc\xe1\xa4\xbe\xc0\xa7\x17\x52\x6d\x40\x4f\x12\xd5\xa2\xe0\x1c\xc9\x1e\xe0\x83\x04\x1f\x12\x51\x87\x93\xe4\x54\xa7\xb4\x7e\x9a\x83\x27\x4f\xae\x2f\xcc\x3e\x32\xc7\x77\xd3\x79\x0e\x6c\x88\x18\x20\x98\x91\x47\x65\x8a\x06\xc2\x12\xe2\xed\x58\x3f\xe2\x86\xd9\x69\xbf\xcd\xf8\x68\xdc\xfd\xeb\xf1\x70\xa9\x05\x2f\x76\x9d\x4a\x70\xb4\x8c\xd1\x74\x6d\x63\x5f\xdf\x9c\x9a\xa5\xab\x6d\x4d\xb4\x52\x07\x2e\xb5\xc0\xe5\x51\x7e\x69\xe8\x5e\x18\x91\x83\x48\x1b\xfa\xb4\x1f\x12\x9d\x7d\x6c\x18\x8c\x59\xa8\x3f\xdc\xda\xa8\xb7\xad\x37\x76\x3a\xb5\xdf\x4a\x71\xe7\x52\x77\x92\x3c\x26\x6a\x4e\xe2\x9c\x8e\x1e\x1d\xe5\x82\x28\x1a\x47\x38\x15\x4d\xed\x02\x3a\xd8\x72\x47\xce\x2e\x20\x0d\xe0\xd4\xc6\xf7\x80\x96\x23\xae\x7f\xc8\x96\x0f\xa2\x8c\x44\xcd\x23\xcc\x38\x88\x32\xa5\x2e\x3d\xd4\xa2\xff\x98\x20\x52\x0c\xeb\x98\xf1\xd4\x72\x51\xf2\x11\x7f\x16\x53\x79\x98\x39\x1c\x5e\x16\xda\x49\x07\x00\x63\xc7\x08\x60\xbc\xce\x62\x6e\x28\xe5\x77\x4e\x38\x28\x70\x75\xad\x7f\x17\x07\xa6\x91\xa1\xb7\x6d\xa1\x39\x32\xf5\x6d\x4c\x4b\x6d\x58\xee\xbb\xda\xc8\x9e\xe9\x00\x39\x2e\xc9\x6a\x08\xd6\x55\xb3\x23\x53\x1b\x9a\xe7\x74\xbf\x92\x98\x60\x09\x36\x38\x57\xb2\xbc\x00\xc8\x31\xe3\xab\x5a\xa2\x83\x25\xf8\xf8\xe9\x30\x19\xd3\x92\x71\x90\x95\x19\xcf\x70\xbe\xaa\x28\x03\x4b\xf0\x02\xe6\x98\xbf\x28\xd3\x89\xef\x40\x6f\xe6\xcc\x4c\x0b\xc1\x99\xef\xb8\x47\xd7\xe8\xd8\x05\xae\x56\x35\x91\xfb\x4f\x46\x4b\x41\x41\x4d\xa6\x59\xba\x9d\xab\x03\x00\xf0\x2c\x27\x2b\x96\x7d\x20\x73\xe0\xf8\x81\xa9\x4e\x7d\xa0\xb4\x58\xd1\xcd\x86\x11\x91\x32\xb4\xa9\x2c\xa6\x65\x8b\xe5\x3a\xc7\x89\x4f\x0a\x50\x41\x92\x6c\x57\x9c\xe6\xe6\x23\xe7\x34\x37\x0b\x9d\x62\x17\x78\xe3\xec\x72\x71\xd0\x39\xc5\x0b\xd9\x8e\x77\x86\x99\x73\x8a\x19\x72\x42\x85\xdb\x21\x96\x7b\x91\xa5\x1a\x1c\x2c\xfb\x1e\x80\xc2\xe8\xbd\x58\x66\xb7\xe9\x6b\x11\x1e\x22\x1e\xdf\xf0\x3a\x2b\x53\xb0\x04\x4f\x16\x7f\xbe\x2b\x72\x70\x4b\x6a\x96\xd1\x72\x69\x20\x68\x1b\x80\x94\x31\x15\x75\xe9\xd2\xf8\xdb\xdb\xaf\xad\xd0\x00\x8c\xe3\x32\xc1\x39\x2d\xc9\xd2\x28\xa9\xf1\xe7\x9b\x05\xbb\x4d\xc1\x5d\x91\x97\x6c\x69\x6c\x39\xaf\xe6\xd3\xe9\x7e\xbf\x87\x7b\x17\xd2\x3a\x9d\x3a\xb6\x6d\x4f\xd9\x6d\x6a\xb4\x1b\xc5\xd2\x70\xbc\x08\x86\x9e\xd1\x6c\x10\xe2\x6b\x08\x1d\xdf\xd0\xd9\xde\xc8\x26\x49\x82\x39\x06\x59\xb2\x34\xba\x2f\x91\x31\xbd\x59\x54\x98\x6f\xe5\xa8\xf8\xe0\xcf\x1c\xcf\x00\xc9\xd2\x78\x09\x1c\x6f\x06\x7d\xe4\xd9\x9e\x89\x44\xa8\xda\x4e\x10\x00\xe4\x46\xd0\xf6\x67\x21\x32\x67\x08\x86\xb6\x1d\x79\x01\x88\x81\x0d\x43\xdb\x09\x42\x53\x9c\x76\x3d\x1f\x85\x9e\x0f\x10\x74\x1d\x6f\xe6\x9a\x96\x67\x43\xc7\x0f\x04\xae\x0d\x43\xdf\x13\x50\x9e\x0f\x3d\x34\xf3\xa3\x08\x58\x2e\x8c\x3c\xdb\xf5\x4c\xcb\x73\xa1\x13\x04\x5e\xe0\x00\xcb\x45\xd0\x71\x6d\x14\x9a\x96\xe3\xc1\xc0\xb5\x11\x8a\x5c\x39\xea\x85\xae\xeb\x9b\x96\x0f\x5d\xc7\x76\x83\x19\xb0\x6c\x68\x07\x91\x6b\xfa\xd0\x09\x91\x1b\x20\x60\x21\x68\x23\xdf\x76\x4c\xd7\x81\x7e\x14\xba\x61\x28\x86\x90\xed\xcd\x90\xe9\xdb\x30\x74\x83\xc0\x71\xc0\x0b\xb1\x31\x86\x9e\x33\x43\x33\x13\xf9\x1e\x74\x67\x7e\xe0\x00\xdb\x44\xa1\x0d\x51\xe4\xcf\x7c\x90\x03\x84\x6c\xe8\xdb\xb6\x1f\x9a\x96\x6f\x43\x2f\x74\xdc\x08\xb8\x30\x8a\x5c\xd7\x31\x43\x1b\x3a\x11\x0a\x84\x4c\x0e\xb4\x3d\xc7\x0f\x66\xa6\xe3\xc0\xc8\x0d\x51\x20\x64\x72\x6c\x37\xf4\x7c\x13\x05\x30\x8c\x82\xc8\x05\x9e\x03\x05\xaf\x99\x63\x5a\x08\x41\x3f\xf2\xa5\x2d\x6c\x3b\x34\x6d\x88\xdc\xc8\x17\x00\x33\xe4\x22\x64\x22\x1b\x46\x28\x9c\x45\x82\x8a\x6f\x47\x4e\x64\x5a\x82\x4a\xe8\xa0\x86\x99\xe7\xbb\x33\xcf\xb4\x1c\x07\xba\x51\x64\xbb\xc0\x81\x01\x42\xae\x63\x5a\xa1\x0d\x5d\xdf\xb1\x7d\x80\x10\x82\xae\x1f\x45\xbe\xe9\x85\xd0\xb7\x03\x84\x04\xad\x99\xeb\x45\x02\xcf\x87\xb3\x99\x13\xf9\xe0\x83\x01\x36\x59\x9e\x5b\xf5\x2e\x27\x4b\x83\xdc\x92\x92\x26\x49\x33\xb6\x34\x56\xab\xe7\xaf\x5e\xbc\xfa\x7e\xb5\x12\xb1\x21\x22\xed\xe6\xc9\x20\x7f\x8a\x30\xff\x42\xd4\x2d\x32\x9f\x89\xf5\x35\x51\x56\xaa\xf8\xfe\xb7\x3a\x9f\x37\xb1\x4e\xfe\xf6\xfd\xb7\x13\xb5\x23\xc9\x6e\xd3\xa7\x77\x45\x6e\x1a\xe0\xe9\xc8\xba\xb9\x82\x35\xa9\x72\x1c\x93\x89\xf1\x07\xc3\x34\x3e\x77\x5c\x43\x19\x3a\x0a\x67\x82\xb6\x0b\x78\x65\xea\x9c\xdf\xc8\x85\xfe\xa3\xbe\x68\xe1\x21\x07\x98\xe0\xd4\xcc\xf1\x10\xfd\xe9\x6a\xb8\x65\x08\x09\xff\x2e\x76\xc0\xff\xa8\xca\x72\x0f\xfe\x35\x55\xfe\xa6\x26\xa4\xfc\x8f\xaa\x9c\x0a\x09\xfe\x6d\x2a\x77\x5f\x36\xbb\x52\xb6\x0a\x01\xad\x48\xb9\xca\xca\x55\x4a\x69\x9a\x93\x55\x81\x2b\x36\xb9\x52\xf7\xa1\x5b\x5c\x83\x5d\x9d\x83\x25\x90\xd9\x99\xb5\xe9\xb9\x81\x87\x31\x2d\xa6\x02\x67\xfa\x17\xa1\xb8\x52\x18\x88\x5d\x3f\xe3\xbb\x84\x80\xa7\xc0\x30\x07\x93\xb4\x4c\xf5\xd9\x02\x57\x30\x25\xfc\x7f\x29\x2d\x26\x57\x62\xf4\x83\xa1\x9e\x05\xca\x84\xee\xa1\x90\x75\xb2\xab\x73\xf3\xc9\x6a\x9d\xe3\xf2\xfd\x93\xd1\x46\xe3\x41\xb5\x5d\x95\x60\x4e\x5e\xe2\x6a\x52\xb0\xf4\x4a\xdf\x5b\x85\x56\xbd\xfa\xa4\x60\xe9\x41\x68\x13\xc8\x6f\x9d\x94\x6a\x19\x09\xda\x52\x0c\x32\xc2\x5f\x34\x98\x15\x65\xa7\x20\xbe\xa7\x1c\x0b\x61\x9e\x95\x69\x4e\x24\x8b\x2d\xc1\x62\x3f\xbc\xd2\x9a\xb3\x40\xad\xd3\x60\x45\x19\xcc\xca\x52\x54\x82\x77\xa2\xc2\xfa\x6e\x57\xac\x49\x2d\xd8\x08\x01\xaf\x20\xa7\x5f\x67\x77\x24\x99\x04\x57\x07\xf3\xa9\x20\x22\xdc\x8e\x20\x3d\x3e\xd9\x06\x4c\xd4\x02\xaf\x67\x17\x20\x1d\x51\xe1\xf2\x2d\x1d\xaa\xf5\x69\xc4\xda\x7b\x61\xc3\x92\xec\xc1\xdf\xc9\xfa\x0d\x8d\xdf\x13\x3e\x31\xf6\x22\x48\x84\x54\xad\xdf\x72\x1a\x4b\x23\xc0\x2d\x65\xbc\xc4\x85\xf4\xfa\x7c\x0c\x40\x96\x94\x4f\x81\x31\xdd\x33\xe3\xc8\x7b\xcf\x20\x2d\x85\xf3\x45\x35\xda\x7a\x57\x0f\xd2\xe9\x54\x14\x8f\x34\x27\x30\xa7\xa9\x10\x40\xc6\xb5\x42\xe2\x93\x4e\x2c\xce\x29\x23\x8f\xa0\x26\xe1\x4f\x93\x2b\x08\x63\x38\xd5\x08\x92\xc1\x22\x2a\x98\x28\x92\xfe\xeb\xcd\xab\xef\x60\x85\x6b\x46\x26\x04\x8a\xfc\xa1\x9a\x58\x2f\xac\x0b\x96\x6a\xce\x13\xae\x2b\x70\x05\x3e\x5b\x2e\xc1\xae\x4c\xc8\x26\x2b\x49\xd2\xf3\x9f\x1e\xf3\xd7\x27\x8a\xbf\xc1\x52\x11\x25\xbb\x40\x1a\x08\xdd\xac\x11\xa5\xa2\xd7\x24\x12\x10\x94\x15\x6d\x04\xbc\x80\x6f\xb3\x9c\xbc\xc0\xf7\xa4\x9e\x74\x95\xdc\x47\xf6\x09\x8a\x3a\x56\xae\x5d\xc6\x6b\x42\xb8\x08\x30\x51\xd9\x7d\xfc\xf0\x69\xfa\xf1\xee\xd3\xf4\xe3\xfd\x27\x58\x95\xa9\x61\xea\x9a\x14\xf8\x4e\x24\x83\x39\x40\xa1\x56\xdd\x16\x59\xd9\x8c\xeb\x45\xaf\x60\xd2\x24\xc9\x5e\x26\x3c\x54\xd1\x83\xfa\xf9\x55\x5b\x3e\xf7\x10\x94\xd2\x5a\x43\x11\xe7\x4b\xcc\xe7\x40\xb9\x7e\xd4\xe6\xd9\x6e\x9d\xd0\x02\x67\x25\x9b\x83\x1f\x0d\x2c\x77\x6c\xf1\x5f\x6c\xbc\x53\xdc\xa0\xfa\x44\x9a\xaf\x22\x25\xce\xaa\x55\x8c\xe3\x2d\x49\x56\x6b\xcc\x88\xf0\xf1\x05\x16\x15\x69\x17\xb6\xe8\xb0\x24\x7c\x9a\x12\xba\x27\x6b\x49\x68\xca\x48\x7d\x9b\xc5\x64\xca\x0b\x36\x45\xd0\x86\xf6\xb4\x63\xd4\x72\xf8\xcb\x57\xaf\xdf\x7c\xf3\xb9\xfb\x2c\xb2\xed\x08\xb9\x7f\xa9\xca\x47\x38\xc4\x1b\x77\x88\xf7\x2b\x3b\x84\x17\x4c\x9c\xf7\x77\x3a\xa1\xe9\x34\x21\x9c\xc4\xfc\x7b\xc2\xb3\x12\x8f\x00\xa8\x7e\x32\x90\x63\x3c\xca\xc9\xb2\xbd\x50\xe1\x5a\x76\x4f\x05\xe9\x33\xae\x65\x1c\x17\xa4\x5c\xc9\xb2\x6d\xb5\x6f\x6b\xa9\x07\xdd\xda\x60\xc9\x8d\x95\xd3\x92\xd4\xbf\xad\x13\xd5\x98\x9c\xd4\x35\xce\xca\xc7\x1a\xb2\xc1\xfa\xcd\x94\xaa\x29\xf7\x98\x93\xfa\x91\x86\x94\x38\xb2\x3f\xf6\x9b\x2d\xa5\x2d\x63\x5c\x73\xba\x4a\x70\xfd\xfe\x94\x25\x45\x2d\x24\xa1\x92\xb5\xd5\xe6\x5e\x66\x09\xdb\xa6\x39\x5d\xe3\x1c\x32\x96\xc3\x0d\x66\x3c\xbf\x97\x49\x5c\x90\x5a\xe1\x3c\xff\xcd\xbe\x40\x69\xc5\x29\x3b\xa2\x28\x53\x8c\x02\x57\x7d\x83\xe4\xc2\xe4\x82\xb6\xa8\x48\xcc\x53\xfb\xea\x3b\x4d\xa6\xe6\xea\x79\x2e\xaa\x9c\x81\xfa\x73\x80\xf4\x96\x21\xe6\xbc\xce\xd6\xd2\x08\xcf\x9b\xbb\xfb\x79\xd3\x1b\x1d\xa0\xea\xd3\x3d\xed\xf4\xf8\x69\x88\xca\x63\x48\xfb\x40\x00\x54\xf8\x4c\x3e\x1e\xef\xe4\x8c\xe6\xfe\x3f\x27\x1b\x6e\x68\x66\x6a\xe0\x21\x4e\x92\x67\x0a\xa6\xb1\xc0\xcd\x53\x4d\x3f\x69\xc7\xb6\x61\x19\x16\xd3\xea\x5e\x5e\x28\xff\x64\x00\x8e\xeb\x94\xf0\xe5\x4f\x46\x73\xbe\xfa\xc9\x00\xb2\xdb\xbd\xfc\xc9\xf8\xc9\xb8\x79\x55\x11\x71\x9a\x25\x44\x54\x8a\x8b\x29\xbe\x31\xfe\x25\x29\xda\xaa\xe5\x21\xae\x02\xf4\xd9\xb7\xaf\x7f\x1e\xbf\xf9\x54\x1e\x4e\x95\x0c\xf6\x10\xbb\x37\x12\xf2\xe7\x6b\x27\x57\xba\x4c\x95\x0f\x71\x7a\x2e\x20\x7f\x3e\xa3\x34\xe3\xdb\xdd\x5a\x72\xca\x33\x5c\x4e\x95\x47\xe9\x1e\xe2\x2c\xe0\x7f\x11\xc6\xeb\xfb\x02\xdf\x65\xc5\x8e\x1d\xb9\x73\x4a\xf3\x35\xae\xad\xe6\x60\x67\x71\x52\x54\x39\xe6\xe4\x21\x91\x0e\x94\x7e\x11\xb9\x9e\x6f\xeb\x8c\xf1\x0c\x97\x28\x0a\xbd\xc7\x58\x46\x43\x1c\x88\x32\x26\xd4\x5b\x2a\x8e\x64\xc3\x75\x2d\xf2\xcd\x4b\x5c\xf5\xae\x2f\xc4\x3f\x43\x5b\x47\xc6\x5c\xa6\xab\x1e\x48\x13\x85\xe0\x6d\x53\xb6\x18\xf3\x5e\xf5\x73\x0a\x5c\x94\x8b\x47\x60\xa5\xee\x3c\x81\xf0\x77\xb1\x9b\x1f\x11\xe4\xe6\xde\x07\x95\x61\x0a\xbe\x14\x1b\xdc\xe4\x3b\x91\x26\xc0\x4b\x9a\x90\x2b\x63\xae\x6c\x7d\x0a\xce\xe1\x60\xdc\x3b\xe5\xdc\x92\x3a\xc7\xf7\x27\x2c\xf2\x1d\xbe\xcd\x52\xd9\x00\xc0\x39\xf8\x12\x73\x2c\xac\x32\x9a\xbf\xc7\x38\x01\xa0\x24\xcf\x66\x17\x98\x74\xe6\x37\x55\xce\x57\xa7\x1c\xd6\xb4\x6b\x64\x12\x6e\x3e\x4e\xc4\x86\xa0\x8b\x99\xc5\x22\x09\xeb\xdd\x60\xcd\x56\xb5\xda\xe9\xe9\x5f\x37\x75\x93\xaf\xea\x4c\x3e\x7e\x66\x34\x3b\x8f\xba\x43\x6a\x39\xbd\x6d\x20\x69\xf2\xf6\xe6\xd6\x59\x99\xbc\xa6\xd5\xae\x9a\xbc\x80\xb2\x6d\x34\xf9\x88\x77\x9c\xbe\xc6\x65\xbb\xef\x7c\xba\xea\xb5\xa8\xc4\xd7\xe7\xcd\x93\x1f\x13\xb5\xdd\x24\x36\xe5\xab\x61\x08\x37\x7c\x5e\xeb\x4d\x32\xdb\xb4\x87\xb2\x74\x17\x96\xaa\x05\x0f\xd8\x26\xf8\x38\xa2\x5a\x87\x72\x4e\xc5\x03\xcc\x85\xaa\x76\xba\xe9\x57\x9b\x47\xf5\x3a\xea\x8c\xf0\xd5\x01\xa6\x2f\x6e\x63\x07\xad\xf4\x80\xb4\x9c\x3c\x49\x6a\x9c\x32\x8e\x6b\xfe\xc4\x3c\xd5\xe4\x69\x28\x37\xcd\xb5\x89\x94\x4b\x6b\xc0\xf4\x63\xee\x48\x97\x94\xc9\x39\xaa\x4d\x4f\xe7\x0d\xa7\x35\x49\x9e\xcb\xb8\x99\x5c\x40\x58\x14\x22\xff\x1a\x61\x00\x72\x1a\xe3\x5c\xcc\xe3\x94\x08\x0b\x7f\xcb\x49\x31\x31\xca\x95\xa0\x6d\x98\x7a\xcf\xf6\x02\x91\xe2\x3c\x8b\xdf\x3f\x64\xbf\xbe\x67\x88\x08\xbd\xbc\x4c\x2f\xa0\x2f\x56\xbd\x4c\x00\xf1\x16\x97\x29\x39\xc7\x29\xdb\x80\x09\x81\xb2\x17\xb9\x5c\x9e\xce\x72\x23\xdd\xd1\xae\xb3\x2b\xb2\xc0\x44\xbf\x2a\xe9\x75\x4b\x01\xc9\x19\xe9\x73\xd2\x72\xf5\xc5\xe4\xe5\xb5\xc4\x28\xf9\x0b\x09\xc8\x7c\x75\xa2\x9b\xab\xe5\x9e\xb1\x46\xfa\x98\x5b\x5a\xa7\x68\x8f\xfa\xe9\xab\xf6\x98\x7c\x86\x0e\xec\x2d\xd1\xb4\x62\xf0\x16\xe7\x3b\x02\x96\xa0\x01\x16\x4e\x3f\x34\xb1\xc3\x2b\xe5\x12\xa1\x99\x2d\x53\x65\xf6\x5a\xef\x91\xaa\x17\x0d\x38\x6f\x1a\xfa\x3d\x4b\xf7\xf8\x77\x50\x8a\x10\x43\x12\xa3\xcd\xd4\x11\x6b\x1d\x68\x6f\x49\x4d\x86\x1d\x55\xa5\x0d\xcc\xe4\xdd\x50\xb6\xb9\x9f\xa8\xb2\xf5\x77\x47\x7e\x5f\x11\x63\x0e\x8c\x8e\xae\xd1\xdf\xa2\x73\xcc\x8d\x39\x90\x3d\xe5\xaf\x73\x8a\x07\x09\xf0\x60\x5d\xc8\xaa\x3c\xe3\x13\xc3\x34\xae\x7e\xb4\xdf\x5d\x0d\xe8\x94\xe9\xe3\xe9\xa0\x21\x9d\xce\x60\x67\x89\xe9\x26\x17\x0e\xb6\xa1\x6f\x9e\x88\x4f\xd5\xc3\x7b\x06\x19\x29\x13\xbd\xbf\x7d\x2a\x6a\xbb\x64\x2c\xff\x68\xae\x38\xde\x83\xf4\x42\x43\xdd\x19\x1b\x00\xed\x2e\xc6\x48\x68\xf9\xa4\x7b\x46\xa6\x01\x36\xd4\xc8\x18\x59\x95\x0f\x51\x3c\x49\x4b\xcd\x71\xfd\x87\x72\xe4\x57\xf5\xea\x60\x2c\x55\x3f\x59\xb7\x16\x10\xa9\xb0\x51\xf6\xac\xc9\x38\x4d\xd3\x9c\x74\x56\xd3\x0c\xa3\x58\xf3\x33\xed\xfe\xe8\x41\x1f\xe0\xac\x6e\x2c\xd0\xe4\x87\xd5\x6d\xc6\xb2\x75\x96\x67\xfc\x7e\x22\x3f\xe6\x64\xe0\x98\xb1\x71\x35\xb7\xbd\xaa\x70\x2c\xf0\xd1\xe8\x0d\x07\x18\xf1\xc1\x10\xd7\xd6\xb3\xe1\xd9\xad\x5b\x75\xc4\xf8\x9e\xb8\x5e\xb1\x2d\xdd\x1f\x74\x35\x4c\xd0\xe9\x70\x89\xc1\x0f\x26\x52\x6c\x43\x06\xe6\x3f\x63\x48\x02\xdb\xe7\xe5\x14\x76\x60\x84\x5f\x53\x76\x1e\x28\xe9\x2e\xce\x09\x07\xf1\x1a\x2c\x41\x42\xe3\x5d\x41\x4a\x0e\xff\x6f\x47\xea\xfb\x37\xf2\x19\x70\x5a\x4f\x0c\xed\xbd\x05\x4b\x28\x6c\x1d\x14\xee\x27\xe1\x78\xdd\xf3\x5e\xbc\xee\x64\x04\x4b\xd9\x39\x3f\x65\xe0\x07\x54\x15\xa8\xfd\x6a\xae\x75\x5c\x37\xa5\xab\x74\xfe\x0a\xab\xb7\x61\x80\x3f\xfe\x71\xfc\x16\xbb\x3f\x7e\xb8\x1a\xee\xad\x75\xbd\x5c\x1e\x23\x65\x9e\x20\x74\xca\x1e\x27\x2e\x64\x4f\xdf\x78\xeb\x05\x5d\xcf\x0b\xf2\x19\xbb\x26\x0c\x9a\x47\xbd\x44\x05\xf7\xa8\xe2\x4f\x4a\x2f\xf6\x1c\xb3\xa5\x23\x2f\xa5\x1f\x81\x4a\x65\x37\xb3\xc3\x2d\xf5\x34\xde\x7c\x18\x68\x96\x53\x9c\x34\x7a\xbd\xe1\x98\xf7\x02\xb7\x51\x4a\x5b\x80\x62\x0f\x57\x85\x48\x8f\x19\x51\x83\x7b\xd2\x8f\x5b\x9d\x8a\x76\xd5\x2a\x62\x60\x38\x5d\xee\xf2\x7c\xa4\x8c\x3d\x13\xc1\x3d\x41\x97\xc0\x10\x81\xdb\xae\xa0\x11\x67\xfd\x12\x4b\xf2\xc4\xa2\xec\x2d\xcb\x13\x92\x9d\x2c\x1b\xd5\x30\x6d\x84\x6d\xf7\xb2\xd3\xd6\x6f\xf7\xa3\xbe\xd9\x5b\xbc\x81\xbd\x95\xf1\x11\x43\x83\xe1\x26\x7f\x94\x7a\xe8\xae\x9e\xa9\x07\xfa\x0c\xb7\x8d\x91\xe4\x72\x46\xf9\x43\x78\x9f\xd4\x5f\x59\x02\x9a\x09\x54\x7c\xcc\x1f\x44\xc7\x7c\x60\x40\x6d\x53\xd6\xa2\xa8\xcb\x5c\x52\xb0\x81\x81\xf5\x29\x61\xe3\x71\x64\xcc\x4f\xe1\xb6\x33\xa3\xee\xd1\x9e\xa3\x90\x49\x6c\x6e\x98\x07\x3c\xf3\xc8\xbd\xff\xfc\x4c\x97\xf2\xf4\x4c\xda\xc3\x79\xc0\x1d\xe2\x94\x7a\xc6\x94\x62\x7a\x60\x46\x89\x33\x50\xf4\x30\x3a\xa2\xa4\x90\x95\xb5\x87\x60\x01\xf7\x80\x50\x25\xbe\x5d\xc9\xe7\x52\x4f\x2f\x91\x0e\x64\x20\xdc\x01\x77\x20\xa0\x36\x33\x22\xa4\xce\x7b\x75\x36\xa5\x1c\xde\xe9\x6a\xd3\x8a\xd5\xf4\xd4\xda\x77\xc1\x68\xdd\x3c\x92\xff\xa4\x7b\xea\xff\xc9\xbb\x91\x44\xa3\x70\x1a\xc4\x84\x32\x07\x65\x47\x60\x72\xfa\x5c\x3a\xb4\x1f\x8e\x79\x76\x2b\x9f\x53\x3b\xe3\xda\x23\xd0\xc8\x2a\x3b\xf0\xaf\xd7\xec\xa4\x19\x9e\xe5\xf9\xc5\x96\x90\x6f\x27\xf4\xcc\x20\x8c\xa0\x88\x3a\x70\x58\x6f\x4e\xae\x3b\xc5\x8f\x42\x36\x98\x93\x32\xe5\x5b\x70\x03\xec\x1e\xc6\x62\x0c\xae\x67\x67\x15\xe2\xc7\x23\xee\xbb\x11\x93\x9f\x3d\xcd\xd6\x24\xcd\x18\x27\xf5\x5f\x71\x99\xe4\xa4\x66\x63\x3b\xef\xaf\x11\x57\xe7\xa3\x4a\x8d\x29\x9c\x24\x5f\xdd\x92\x92\xbf\x10\x72\x97\xa4\x9e\x18\x4d\x3b\xc8\x30\x81\x28\xaa\x97\x37\xfd\x80\x3c\x55\xd1\x77\x44\x0d\x53\x8f\xd9\xb6\xd2\xd6\x62\xf6\xc2\x55\xff\x6f\x8d\xb9\x0d\xad\xc1\x44\x54\xbc\x19\x58\x02\xfb\x1a\x64\xe3\x81\x72\x0d\xb2\xa7\x4f\xcf\x45\x4b\xf6\xee\x97\xb2\xa1\xba\x12\x0d\x13\x64\x67\x6d\x36\x30\xde\xc1\x4a\x43\x69\xbe\x7c\xf5\xb2\xed\xf6\xbe\xa0\x38\x21\x89\xa1\xb6\xfa\x04\xa8\xa6\x9f\x72\x00\xef\xdf\x3e\x14\x38\x2b\xe7\x47\x4e\x29\xe1\x5f\xe5\x44\x7c\xfc\xe2\xfe\xdb\x64\x62\x48\xcc\xe6\xe5\x56\x43\xef\x73\x54\x94\x5d\x86\x67\x55\x94\xf5\x70\xd3\x02\x57\x17\x22\x0b\xd0\x1e\x76\xb3\xd1\x5f\x88\xdf\x00\x6b\x14\x3e\x9d\xec\xc3\x3d\xd2\x38\xfa\x0b\xf1\x3d\x29\xd9\x6e\x5d\x64\xfc\x62\x6c\xab\x81\xef\x1b\xaa\x3a\x67\xe4\x1e\x85\xb4\xea\xdb\xb9\xeb\x31\x5d\x4e\xe3\xd0\xba\xea\x1b\x4c\x49\x44\xdd\xa3\x92\x5a\xf3\xa5\x77\x3a\x51\xe6\x86\x09\xf4\x78\xdc\xe9\x3e\x6a\x3f\x98\xb1\x98\x1e\x7e\x28\x65\xb1\xa6\xc9\x7d\xf7\x2b\x1a\x49\x76\xdb\xbc\xcc\x82\x2b\xe3\x66\x31\x4d\xb2\xdb\xe3\x5b\x68\x62\xae\xb9\xc7\x34\xba\x97\xde\xe5\x2b\xdb\xc6\xe1\xc5\xb4\x03\xba\x1a\xd2\x37\x47\x31\x17\xd5\xcd\x62\xeb\xf6\x21\x64\xf0\xde\x2c\xa6\x5b\xf7\x66\x31\xad\x7a\xe0\xeb\x1d\xe7\xb4\x1c\xa0\xc8\x90\x05\xb4\x94\x1b\xcd\xd2\x18\x7d\xc0\xfc\xba\xb9\xd8\x07\x59\x09\x9a\x71\x51\x46\xb1\xc5\xb4\x21\x79\x39\xaf\x36\xbc\x8f\xdc\x7a\x1d\xac\x6b\x21\xfc\x08\x51\xdd\x7c\x8a\x75\x7a\x31\xdd\x93\xa2\xf9\xc5\x87\x0d\xad\xfb\x80\x32\xf8\x6e\xbe\x79\xfd\x66\xbe\x98\x4a\xa0\x9b\x85\x7c\x8d\x51\xf9\xd1\x13\x63\x84\x7e\x83\x36\xd4\xf6\x34\x1f\x9c\x73\xe3\xe6\x59\x17\xd7\x8f\x63\x76\x08\xee\xd3\xf6\x6d\x28\x34\x5f\x46\x69\xb4\xcb\x54\x31\xb8\xde\xed\xbe\x36\x6e\xba\x91\xb3\x86\x1f\x3a\xe1\xe0\x02\xf5\x44\xab\xc4\x2f\xab\x70\xa9\x2b\xda\x55\x0a\xc6\x00\xad\x77\x10\x16\xd2\xca\xed\xeb\x10\x1f\x63\x0d\x37\xbe\xcd\xd8\xd5\xb5\x01\xba\xe3\xf0\x54\xf3\xc3\x19\xf2\xcd\x1b\x6c\xed\xf2\x53\x5e\x45\x6d\x7e\x18\x67\x62\x79\x7e\x42\x52\x41\xf9\x82\x97\xdc\x6e\x33\xb2\xff\x82\xde\x2d\x0d\x1b\xd8\xa0\x79\xb5\x0d\xf4\x5e\x78\x43\xa4\x38\xbe\x0c\x87\x77\x9c\xfe\xf6\xee\xdb\x6f\xef\xbe\xfd\x52\xef\xbe\x1d\x32\xca\x54\xae\xb7\xde\xea\x3b\x99\x25\xb4\xd5\xd1\x24\x5f\x7d\xf9\x35\xc9\x62\xd0\x7e\xbe\xd6\x17\x4f\xfb\xfb\x26\xed\xdb\xfc\x88\x14\x3f\x63\xd1\x78\x91\x03\xfd\x30\xea\xfe\x5e\xb8\x6c\x90\x01\x6e\x16\x69\xbb\x40\xc4\x92\xf0\x82\x10\x7a\xd2\xdb\x0e\x44\x41\xb8\xb5\x9c\x10\xba\x4e\x14\x5b\x11\x9c\x21\xc7\x0a\x23\x18\xcc\x22\xe1\x0c\x2f\xb0\x50\x80\x20\x0a\x2d\x14\x88\x39\x0b\xcd\x1c\xe8\xf8\xe1\x0f\x8e\x07\x91\xeb\xc7\xb6\x85\x5c\xe8\xba\xa1\x85\x6c\x38\x8b\x90\x25\x87\x3d\xfd\x0f\x88\x25\x10\x42\xa6\x2d\x47\x44\xb4\x0a\xe8\xa0\xfb\xd6\x80\xfd\xe0\x45\x30\x42\xcf\x91\xeb\xc0\xc8\xf1\xcc\xc0\x86\x51\x18\x9a\x81\x03\xd1\x6c\x66\x8a\x51\x2f\x0c\x4d\xb1\x7e\x43\xa7\x93\xfb\xaf\x02\xd3\x77\xc1\x73\x24\x16\x6e\xd0\x0d\x9b\xb6\xe9\x08\x2a\x81\x27\x3e\x79\x01\x74\xc2\x20\xb6\x4d\x29\x69\x60\x76\xb0\x82\xa9\x63\x36\x14\xda\x6f\x5b\x27\x82\x8e\x13\xc6\xc8\x81\x28\x72\xcc\x30\x80\x21\x0a\xcc\x10\x41\xdf\x47\x26\xf2\x7d\xe8\x99\x28\x08\xe1\x2c\x9a\x99\x28\x08\xa0\xe3\x44\xe0\xd6\x15\xe9\xc3\x1b\x27\xef\x9b\xaa\x86\x7e\x2c\x40\x3c\x57\x0a\x25\xed\x23\xcd\x10\x99\xaa\xb5\xfc\x5b\xab\xa1\x08\xe2\x70\x26\x84\x11\x40\xa1\x13\x99\xc8\x0f\x60\x60\xcf\xac\x59\x04\x3d\xe4\x36\x72\xcc\x7c\xab\x95\x43\x4a\x1e\x78\x92\x43\xc7\xc0\x71\x1a\x06\x41\xf7\xad\x51\x12\x3c\x6f\x83\xe7\x60\x24\x2f\x44\x52\xa7\xce\x7c\xbd\xe8\xf8\x00\x5e\x4a\x23\x46\x9e\xe9\x46\x21\xb4\x23\x37\xb6\x42\x1f\xba\x9e\x6f\xda\x96\xc8\x3b\xa1\xed\x59\x41\x24\x16\xf5\xe1\xab\xfc\x8b\x5c\x10\xdb\x12\x34\x70\x4d\x09\x10\x75\x13\x66\x0f\x30\x16\x50\xb3\xc0\xb4\x9b\x09\xa7\x85\x3f\x7c\xeb\xe8\x3d\xf7\x6c\x24\x2d\xea\x3a\x21\x0c\xdc\xc8\x74\x5d\x04\x83\x19\xea\x24\x33\x7b\x92\x7e\x38\xec\x0b\x22\xec\xbb\x49\x34\x0b\xa0\xd0\xc2\x0d\x60\xe0\x84\xa6\x6d\x05\x01\x74\x3d\xd3\x89\xe0\x4c\xa8\x22\xbf\xc8\xff\xa3\xd8\x36\x05\x90\xf0\xa4\x08\x7f\xd4\x0e\x9b\x2a\x0c\x88\x05\x88\x90\x5d\x7e\xb7\x24\xa4\xdb\x7e\x69\x40\x9e\xbb\xc8\x81\x81\x60\x61\xb7\xd4\x42\x07\x46\xbe\xdf\x4a\x62\xea\x82\x49\xa1\xa7\xe9\x21\x69\x1d\x2a\x0d\x25\x6b\x1d\x4b\x8d\xc5\xb4\xad\xa3\x17\xd3\xf6\xd7\x08\xff\x3f\x00\x00\xff\xff\x70\x97\x08\xd7\xa7\x50\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 20647, mode: os.FileMode(438), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

